# .github/workflows/deploy-cv.yml
name: Deploy CV to GitHub Pages

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Copy files to build directory
        run: |
          mkdir -p _site
          cp *.html _site/
          cp -r assets _site/ 2>/dev/null || :
          cp -r images _site/ 2>/dev/null || :
          cp -r css _site/ 2>/dev/null || :
          cp -r js _site/ 2>/dev/null || :
          
      - name: Create index.html if not exists
        run: |
          if [ ! -f _site/index.html ]; then
            # Find the main CV HTML file and copy it as index.html
            if [ -f _site/cv.html ]; then
              cp _site/cv.html _site/index.html
            elif ls _site/*.html 1> /dev/null 2>&1; then
              cp $(ls _site/*.html | head -1) _site/index.html
            fi
          fi
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
